[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool]
[tool.poetry]
name = "circuitry"
version = "0.1.0"
homepage = "https://github.com/blei-lab/circuitry"
description = "Manipulate circuits in LLMs."
authors = ["Achille Nazaret <achille.nazaret@gmail.com>"]
readme = "README.md"
license =  "MIT"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
torch = "^2.0.0"
numpy ="^1.26"
huggingface-hub = "^0.22"
transformer-lens = "1.15.0"
scipy = "^1.12.0"
tracr = {git = "https://github.com/google-deepmind/tracr"}


[tool.poetry.dev-dependencies]
black = "^24.0.0"
pytest = "^7"
tox = "^3.20.1"

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ['py39', 'py310', 'py311']

[tool.ruff]
lint.ignore = [
    "RUF001", # ruff-specific rules ambiguous-unicode-character-string
    "S101", # flake8-bandit assert
    "S308", # flake8-bandit suspicious-mark-safe-usage
    "E501", # pycodestyle line-too-long
    "PT006", # flake8-pytest-style fixture-final-use
    "S311", # random generator warning
    "F722", # typing error incompatible with jaxtyping style annotation
    "PTH123", # flake8-use-pathlib
    "PTH118"  # flake8-use-pathlib
]
line-length = 100
lint.select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "EXE", # flake8-executable
    "F", # pyflakes
    "I001", # isort
    "INT", # flake8-gettext
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S", # flake8-bandit
    "UP", # pyupgrade
    "W", # pycodestyle warnings
]
src = ["circuitry", "tests"]
target-version = 'py39'
