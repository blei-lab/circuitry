[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

[tox]
skipsdist = true
envlist =
    clean,
    check,
    {py310,pypy310, py39,pypy39},
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    pypy38: {env:TOXPYTHON:pypy3.8}
    pypy39: {env:TOXPYTHON:pypy3.9}
    pypy310: {env:TOXPYTHON:pypy3.10}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    py312: {env:TOXPYTHON:python3.12}
    {bootstrap,clean,check,report,docs,codecov}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
allowlist_externals = poetry
deps =
    pytest
    pytest-cov
commands =
    poetry install
    poetry run pytest --cov --cov-report=term-missing --cov-report=xml -vv tests

[testenv:check]
deps =
    docutils
    pre-commit
    readme-renderer
    pygments
    isort
skip_install = true
allowlist_externals = poetry
commands =
    poetry check
    pre-commit run --all-files --show-diff-on-failure

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage
